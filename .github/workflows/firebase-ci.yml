on: [push, pull_request]
jobs:
  emulator_test:
    name: Run all tests using Firebase Emulator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Firebase Emulator
        run: npm install -g firebase-tools
      - name: Install dependencies
        run: npm install; yarn install;
        working-directory: test
      # - name: Get Library Versions For Binary Caching
      #   id: cache-settings
      #   name: Set Output
      #   run: |
      #     echo "{firebase-tools}={$(yarn list -s --depth=0 --pattern firebase-tools | tail -n 1 | sed 's/.*@//g')}" >> $GITHUB_OUTPUT
      #     echo "{firebase-tools}={$(npm list -s --depth=0 | grep firebase-tools | tail -n 1 | sed 's/.*@//g')}" >> $GITHUB_OUTPUT
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-${{ steps.cache-npm.outputs.firebase-tools }}
      - name: Run Transpiler
        run: npm install --save firebase-functions@latest; npm run build
        working-directory: functions
      - name: Run all the tests
        working-directory: test
        run: firebase emulators:exec --token "$FIREBASE_TOKEN" --project booksreader-e1dd5 'npm test'
